<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>ocdraw</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>/**
绘制方式：drawInContext、renderInContext、drawViewHierarchyInRect、CGContextDrawImage()
 
 https://blog.csdn.net/yangyangzhang1990/article/details/52452707
 -drawInContext 或是-drawLayer:inContext 运行在CPU，结果传给GPU
 其实 CGContextRef 的创建过程 就是CPU的工作过程 
 CPU 将view变成了bitmap 完成自己工作，剩下就是GPU的工作了。
 GPU处理的单位是Texture 。基本上我们控制GPU都是通过OpenGL来完成的，但是从bitmap到Texture之间需要一座桥梁，Core Animation正好充当了这个角色
 OpenGL ES 做GPU渲染，CoreGraphics做CPU渲染。
*/

//1.根据image绘制
                //                UIImage *image = nil;
//                UIImage *image = [[WorkManager sharedWorkManager].exportingWork workSnapShootAtTime:progressTime];
//                if (self.delegate) {
//                    [self.delegate writeImage:&amp;image withTime:progressTime];
//                }
//                [image drawInRect:CGRectMake(0, 0, _viewSize.width, _viewSize.height)]; //如果image为nil？
                //2.从presentationLayer绘制
                [self.recorderView.layer.presentationLayer renderInContext:self.bitmapContext];
                //3.从view绘制
//                [((SceneView *)self.recorderView) previewWork:progressTime];
//                [self.recorderView drawViewHierarchyInRect:CGRectMake(0, 0, _viewSize.width, _viewSize.height) afterScreenUpdates:NO];</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>05080EBC-7CF2-4528-AB9C-2B563959F718</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>多种绘制方式</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
