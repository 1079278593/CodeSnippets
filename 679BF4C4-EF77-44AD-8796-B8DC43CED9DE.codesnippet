<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>ocgesture</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>[&lt;#name#&gt; addGestureRecognizer:[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(tapGesture)]];
//有些类需要开启userInteractionEnabled = YES
- (void)tapGesture {
    
}

 UILongPressGestureRecognizer *longPress = [[UILongPressGestureRecognizer alloc]initWithTarget:self action:@selector(longPressGesture:)];
 longPress.minimumPressDuration = 1;
 [self.view addGestureRecognizer:longPress];

 - (void)longPressGesture:(UILongPressGestureRecognizer *)guesture {
     if (guesture.state != UIGestureRecognizerStateBegan){
         return;
     }
     
     NSLog(@"longPressGesture");
 }
 ///允许两个手势一起运行
 - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer {
     return YES;
 }

 //下面这个两个方法也是用来控制手势的互斥执行的
 //这个方法返回YES，第一个手势和第二个互斥时，第一个会失效
 - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer {
     return YES;
 }
 //这个方法返回YES，第一个和第二个互斥时，第二个会失效。顺序为添加的顺序
 - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer {
     return YES;
 }

- (BOOL) gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldReceiveTouch:(UITouch *)touch {
    CGPoint point = [touch locationInView:self.scrollView];
    BOOL flag = [self.scrollView.layer containsPoint:point];
    if (flag) {
        return FALSE;
    }
    return TRUE;
}
//判断包含的其它两种方法：
//1.
UITouch *touch = [touches.allObjects lastObject];
BOOL result = [touch.view isDescendantOfView:&lt;#targetView#&gt;];
//2.
CGPoint point = [touch locationInView:&lt;#targetView#&gt;];
BOOL result = CGRectContainsPoint(&lt;#targetView#&gt;.bounds, point);</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>679BF4C4-EF77-44AD-8796-B8DC43CED9DE</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>View增加手势</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
